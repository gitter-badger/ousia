package ousia.util.romans

private let roman_numerals = SEQQ(
  SEQQ('I', 'X', 'C', 'M'),
  SEQQ('V', 'L', 'D')
)

function arabic_to_roman(n) = {
  let string = n to String
  let range = Range(string.size, 0)
  (string zip (range) map (digit_to_roman(_, _))).sum
}

function digit_to_roman(n, i) = {
  let I = romanNumerals(1,i)
  let V = romanNumerals(5,i)
  let X = romanNumerals(1,i+1)
  n match {
    case 0 => String.empty
    case 1,2,3 => I * n
    case 4 => I + V
    case 5 => V
    case 6 => V + I
    case 7,8,9 => I * (10-n) + X
  }
}
