package ousia.util.romans

private val romanNumerals = Map(
  (1,0) -> 'I',
  (5,0) -> 'V',
  (1,1) -> 'X',
  (5,1) -> 'L',
  (1,2) -> 'C',
  (5,2) -> 'D',
  (1,3) -> 'M',
)

function ArabicToRoman(n) = {
  val string = n to [String]
  val range = Range [string.size, 0]
  (string zip (range) map digit_to_roman(x,y => x,y)).sum
}

function digit_to_roman(n, i) = n match {
  val one = romanNumerals(1,i)
  val five = romanNumerals(5,i)
  0 => String.empty
  1,2,3 => one * n
  7,8,9 => one * n + romanNumerals(1,i+1)
  4 => romanNumerals(1,i) + five
  5 => five
  6 => five + romanNumerals(1,i)
}
